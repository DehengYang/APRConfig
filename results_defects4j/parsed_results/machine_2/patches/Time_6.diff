
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_6/defects4j_Time_6/defects4j_Time_6/src/main/java/org/joda/time/chrono/GJChronology.java /tmp/fixed/defects4j_Time_6/src/main/java/org/joda/time/chrono/GJChronology.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_6/defects4j_Time_6/defects4j_Time_6/src/main/java/org/joda/time/chrono/GJChronology.java	2021-09-02 12:56:32.561722077 +0800
+++ /tmp/fixed/defects4j_Time_6/src/main/java/org/joda/time/chrono/GJChronology.java	2021-09-02 12:56:55.722551267 +0800
@@ -193,6 +193,10 @@
             cutoverInstant = DEFAULT_CUTOVER;
         } else {
             cutoverInstant = gregorianCutover.toInstant();
+            LocalDate cutoverDate = new LocalDate(cutoverInstant.getMillis(), GregorianChronology.getInstance(zone));
+            if (cutoverDate.getYear() <= 0) {
+                throw new IllegalArgumentException("Cutover too early. Must be on or after 0001-01-01.");
+            }
         }
 
         GJChronology chrono;
@@ -976,6 +980,17 @@
                 if (instant < iCutover) {
                     // Only adjust if gap fully crossed.
                     if (instant + iGapDuration < iCutover) {
+                        if (iConvertByWeekyear) {
+                            int wyear = iGregorianChronology.weekyear().get(instant);
+                            if (wyear <= 0) {
+                                instant = iGregorianChronology.weekyear().add(instant, -1);
+                            }
+                        } else {
+                            int year = iGregorianChronology.year().get(instant);
+                            if (year <= 0) {
+                                instant = iGregorianChronology.year().add(instant, -1);
+                            }
+                        }
                         instant = gregorianToJulian(instant);
                     }
                 }
@@ -998,6 +1013,17 @@
                 if (instant < iCutover) {
                     // Only adjust if gap fully crossed.
                     if (instant + iGapDuration < iCutover) {
+                        if (iConvertByWeekyear) {
+                            int wyear = iGregorianChronology.weekyear().get(instant);
+                            if (wyear <= 0) {
+                                instant = iGregorianChronology.weekyear().add(instant, -1);
+                            }
+                        } else {
+                            int year = iGregorianChronology.year().get(instant);
+                            if (year <= 0) {
+                                instant = iGregorianChronology.year().add(instant, -1);
+                            }
+                        }
                         instant = gregorianToJulian(instant);
                     }
                 }


                
                ====================== simfix_2 Time_6 ================================
                
                [PATCH 5610] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_6/defects4j_Time_6/defects4j_Time_6/src/main/java//org/joda/time/format/FormatUtils.java, range: <63,65>, original: for(;size>1;size--){
buf.append('0');
}
, patch: for(;size>1;size--){
size++;
buf.append('0');
}


                