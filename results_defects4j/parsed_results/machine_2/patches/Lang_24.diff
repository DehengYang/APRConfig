
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Lang_24/defects4j_Lang_24/defects4j_Lang_24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /tmp/fixed/defects4j_Lang_24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Lang_24/defects4j_Lang_24/defects4j_Lang_24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2021-09-02 23:06:15.784600369 +0800
+++ /tmp/fixed/defects4j_Lang_24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2021-09-02 23:06:36.353338768 +0800
@@ -1410,7 +1410,7 @@
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return foundDigit && !hasExp && !hasDecPoint;
             }
             // last character is illegal
             return false;


                
                ====================== simfix_1 Lang_24 ================================
                
                [PATCH 3957] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Lang_24/defects4j_Lang_24/defects4j_Lang_24/src/main/java//org/apache/commons/lang3/math/NumberUtils.java, range: <1410,1416>, original: if(chars[i]=='l'||chars[i]=='L'){
return foundDigit&&!hasExp;
}
return false;
, patch: if(chars==null||start==0){
return foundDigit&&!hasExp;
}
return false;


                
                ====================== simfix_2 Lang_24 ================================
                
                [PATCH 3957] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Lang_24/defects4j_Lang_24/defects4j_Lang_24/src/main/java//org/apache/commons/lang3/math/NumberUtils.java, range: <1410,1416>, original: if(chars[i]=='l'||chars[i]=='L'){
return foundDigit&&!hasExp;
}
return false;
, patch: if(chars==null||start==0){
return foundDigit&&!hasExp;
}
return false;


                