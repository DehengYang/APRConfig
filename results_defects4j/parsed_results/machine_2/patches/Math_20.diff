
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_20/defects4j_Math_20/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java /tmp/fixed/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_20/defects4j_Math_20/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	2021-08-26 00:31:50.440805877 +0800
+++ /tmp/fixed/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	2021-08-26 00:32:06.021363470 +0800
@@ -918,7 +918,8 @@
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
+            return boundaries != null && isRepairMode ?
+                decode(repair(x)) :
                 decode(x);
         }
 


                
                ====================== dynamoth_1 Math_20 ================================
                
                --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -994,3 +994,5 @@
} else if (x[i] > 1.0) {
-                    repaired[i] = 1.0;
+                    if (false) {
+                        repaired[i] = 1.0;
+                    }
} else {




                
                ====================== nopol_1 Math_20 ================================
                
                --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -994,3 +994,5 @@
} else if (x[i] > 1.0) {
-                    repaired[i] = 1.0;
+                    if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.generateStatistics) {
+                        repaired[i] = 1.0;
+                    }
} else {




                
                ====================== nopol_2 Math_20 ================================
                
                --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -994,3 +994,5 @@
} else if (x[i] > 1.0) {
-                    repaired[i] = 1.0;
+                    if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.generateStatistics) {
+                        repaired[i] = 1.0;
+                    }
} else {




                
                ====================== nopol_3 Math_20 ================================
                
                --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -994,3 +994,5 @@
} else if (x[i] > 1.0) {
-                    repaired[i] = 1.0;
+                    if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.generateStatistics) {
+                        repaired[i] = 1.0;
+                    }
} else {




                
                ====================== tbar_2 Math_20 ================================
                
                [PATCH 36]//**********************************************************
//org/apache/commons/math3/optimization/direct/CMAESOptimizer.java ------ 730
//**********************************************************
===Buggy Code===
negccov = negcovMax;

===Patch Code===
negccov /= negcovMax;


                