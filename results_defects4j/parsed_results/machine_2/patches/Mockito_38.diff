
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Mockito_38/defects4j_Mockito_38/defects4j_Mockito_38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java /tmp/fixed/defects4j_Mockito_38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Mockito_38/defects4j_Mockito_38/defects4j_Mockito_38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java	2021-10-22 23:06:07.044460506 +0800
+++ /tmp/fixed/defects4j_Mockito_38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java	2021-10-22 23:06:16.132800981 +0800
@@ -45,6 +45,6 @@
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        return StringDescription.toString(m).equals(arg == null? "null" : arg.toString());
     }
 }


                
                ====================== dynamoth_1 Mockito_38 ================================
                
                --- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
@@ -27,7 +27,9 @@
for (Matcher m : matchers) {
-            if (m instanceof ContainsExtraTypeInformation
-                    && !safelyMatches(m, arguments[i])
-                    && toStringEquals(m, arguments[i])
-                    && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
-                suspicious.add(i);
+            if (arguments[0] != null) {
+                if (m instanceof ContainsExtraTypeInformation
+                && !safelyMatches(m, arguments[i])
+                && toStringEquals(m, arguments[i])
+                && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
+                    suspicious.add(i);
+                }
}




                
                ====================== dynamoth_2 Mockito_38 ================================
                
                --- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
@@ -27,7 +27,9 @@
for (Matcher m : matchers) {
-            if (m instanceof ContainsExtraTypeInformation
-                    && !safelyMatches(m, arguments[i])
-                    && toStringEquals(m, arguments[i])
-                    && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
-                suspicious.add(i);
+            if (arguments[0] != null) {
+                if (m instanceof ContainsExtraTypeInformation
+                && !safelyMatches(m, arguments[i])
+                && toStringEquals(m, arguments[i])
+                && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
+                    suspicious.add(i);
+                }
}




                
                ====================== dynamoth_3 Mockito_38 ================================
                
                --- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
@@ -27,7 +27,9 @@
for (Matcher m : matchers) {
-            if (m instanceof ContainsExtraTypeInformation
-                    && !safelyMatches(m, arguments[i])
-                    && toStringEquals(m, arguments[i])
-                    && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
-                suspicious.add(i);
+            if (arguments[0] != null) {
+                if (m instanceof ContainsExtraTypeInformation
+                && !safelyMatches(m, arguments[i])
+                && toStringEquals(m, arguments[i])
+                && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
+                    suspicious.add(i);
+                }
}




                