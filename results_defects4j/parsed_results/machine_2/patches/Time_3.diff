
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_3/defects4j_Time_3/defects4j_Time_3/src/main/java/org/joda/time/MutableDateTime.java /tmp/fixed/defects4j_Time_3/src/main/java/org/joda/time/MutableDateTime.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_3/defects4j_Time_3/defects4j_Time_3/src/main/java/org/joda/time/MutableDateTime.java	2021-09-02 06:50:01.919906107 +0800
+++ /tmp/fixed/defects4j_Time_3/src/main/java/org/joda/time/MutableDateTime.java	2021-09-02 06:50:24.236703737 +0800
@@ -636,7 +636,9 @@
         if (type == null) {
             throw new IllegalArgumentException("Field must not be null");
         }
+        if (amount != 0) {
             setMillis(type.getField(getChronology()).add(getMillis(), amount));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -657,7 +659,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addYears(final int years) {
+        if (years != 0) {
             setMillis(getChronology().years().add(getMillis(), years));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -678,7 +682,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addWeekyears(final int weekyears) {
+        if (weekyears != 0) {
             setMillis(getChronology().weekyears().add(getMillis(), weekyears));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -699,7 +705,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addMonths(final int months) {
+        if (months != 0) {
             setMillis(getChronology().months().add(getMillis(), months));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -720,7 +728,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addWeeks(final int weeks) {
+        if (weeks != 0) {
             setMillis(getChronology().weeks().add(getMillis(), weeks));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -761,7 +771,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addDays(final int days) {
+        if (days != 0) {
             setMillis(getChronology().days().add(getMillis(), days));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -782,7 +794,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addHours(final int hours) {
+        if (hours != 0) {
             setMillis(getChronology().hours().add(getMillis(), hours));
+        }
     }
     
     //-----------------------------------------------------------------------
@@ -813,7 +827,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addMinutes(final int minutes) {
+        if (minutes != 0) {
             setMillis(getChronology().minutes().add(getMillis(), minutes));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -844,7 +860,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addSeconds(final int seconds) {
+        if (seconds != 0) {
             setMillis(getChronology().seconds().add(getMillis(), seconds));
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -877,7 +895,9 @@
      * @throws IllegalArgumentException if the value is invalid
      */
     public void addMillis(final int millis) {
+        if (millis != 0) {
             setMillis(getChronology().millis().add(getMillis(), millis));
+        }
     }
 
     //-----------------------------------------------------------------------


                
                ====================== simfix_1 Time_3 ================================
                
                [PATCH 4840] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_3/defects4j_Time_3/defects4j_Time_3/src/main/java//org/joda/time/format/FormatUtils.java, range: <63,65>, original: for(;size>1;size--){
buf.append('0');
}
, patch: for(;size>1;size--){
size++;
buf.append('0');
}


                
                ====================== simfix_2 Time_3 ================================
                
                [PATCH 4840] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Time_3/defects4j_Time_3/defects4j_Time_3/src/main/java//org/joda/time/format/FormatUtils.java, range: <63,65>, original: for(;size>1;size--){
buf.append('0');
}
, patch: for(;size>1;size--){
size++;
buf.append('0');
}


                