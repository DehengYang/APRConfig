
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_80/defects4j_Math_80/defects4j_Math_80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java /tmp/fixed/defects4j_Math_80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_80/defects4j_Math_80/defects4j_Math_80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2021-08-31 00:12:55.755403132 +0800
+++ /tmp/fixed/defects4j_Math_80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2021-08-31 00:13:11.135953355 +0800
@@ -1132,7 +1132,7 @@
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];


                
                ====================== dynamoth_1 Math_80 ================================
                
                --- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
@@ -1135,9 +1135,11 @@
int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+            if (false) {
+                for (int i = 0; i < j; i += 4) {
+                    for (int k = 0; k < 4; k += step) {
+                        final double tmp = work[i + k];
+                        work[i + k] = work[j - k];
+                        work[j - k] = tmp;
+                    }
+                    j -= 4;
}
-                j -= 4;
}




                
                ====================== nopol_1 Math_80 ================================
                
                --- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
@@ -1136,6 +1136,8 @@
for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                if (org.apache.commons.math.linear.EigenDecompositionImpl.this.cachedV!=null) {
+                    for (int k = 0; k < 4; k += step) {
+                        final double tmp = work[i + k];
+                        work[i + k] = work[j - k];
+                        work[j - k] = tmp;
+                    }
}




                