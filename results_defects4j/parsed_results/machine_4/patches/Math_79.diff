
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_79/defects4j_Math_79/defects4j_Math_79/src/main/java/org/apache/commons/math/util/MathUtils.java /tmp/fixed/defects4j_Math_79/src/main/java/org/apache/commons/math/util/MathUtils.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_79/defects4j_Math_79/defects4j_Math_79/src/main/java/org/apache/commons/math/util/MathUtils.java	2021-10-25 23:17:04.494158126 +0800
+++ /tmp/fixed/defects4j_Math_79/src/main/java/org/apache/commons/math/util/MathUtils.java	2021-10-25 23:17:16.355217079 +0800
@@ -1621,9 +1621,9 @@
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+      double sum = 0;
       for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+          final double dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);


                
                ====================== simfix_1 Math_79 ================================
                
                [PATCH 562] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_79/defects4j_Math_79/defects4j_Math_79/src/main/java//org/apache/commons/math/util/MathUtils.java, range: <1624,1629>, original: int sum=0;
for(int i=0;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);
, patch: double sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);


                
                ====================== simfix_2 Math_79 ================================
                
                [PATCH 562] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_79/defects4j_Math_79/defects4j_Math_79/src/main/java//org/apache/commons/math/util/MathUtils.java, range: <1624,1629>, original: int sum=0;
for(int i=0;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);
, patch: double sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);


                
                ====================== simfix_3 Math_79 ================================
                
                [PATCH 562] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_79/defects4j_Math_79/defects4j_Math_79/src/main/java//org/apache/commons/math/util/MathUtils.java, range: <1624,1629>, original: int sum=0;
for(int i=0;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);
, patch: double sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);


                