
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_90/defects4j_Closure_90/defects4j_Closure_90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java /tmp/fixed/defects4j_Closure_90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_90/defects4j_Closure_90/defects4j_Closure_90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java	2021-08-27 23:35:34.016198436 +0800
+++ /tmp/fixed/defects4j_Closure_90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java	2021-08-27 23:35:48.976803989 +0800
@@ -181,7 +181,7 @@
       // create interfaces JSType, ObjectType, FunctionType etc and have
       // separate implementation instead of the class hierarchy, so that
       // union types can also be object types, etc.
-      if (!type.isSubtype(
+      if (!type.restrictByNotNullOrUndefined().isSubtype(
               typeRegistry.getNativeType(OBJECT_TYPE))) {
         reportWarning(THIS_TYPE_NON_OBJECT, type.toString());
         return false;
diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_90/defects4j_Closure_90/defects4j_Closure_90/src/com/google/javascript/rhino/jstype/FunctionType.java /tmp/fixed/defects4j_Closure_90/src/com/google/javascript/rhino/jstype/FunctionType.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_90/defects4j_Closure_90/defects4j_Closure_90/src/com/google/javascript/rhino/jstype/FunctionType.java	2021-08-27 23:35:34.016198436 +0800
+++ /tmp/fixed/defects4j_Closure_90/src/com/google/javascript/rhino/jstype/FunctionType.java	2021-08-27 23:35:48.976803989 +0800
@@ -877,6 +877,9 @@
     // mean "nullable Foo". For certain tags (like @extends) we de-nullify
     // the name for them.
     JSType maybeTypeOfThis = safeResolve(typeOfThis, t, scope);
+    if (maybeTypeOfThis != null) {
+      maybeTypeOfThis = maybeTypeOfThis.restrictByNotNullOrUndefined();
+    }
     if (maybeTypeOfThis instanceof ObjectType) {
       typeOfThis = (ObjectType) maybeTypeOfThis;
     }


                
                ====================== simfix_2 Closure_90 ================================
                
                [PATCH 1184] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_90/defects4j_Closure_90/defects4j_Closure_90/src//com/google/javascript/jscomp/Compiler.java, range: <278,283>, original: JSModule module=new JSModule("[singleton]");
for(JSSourceFile input : inputs){
module.add(input);
}
initModules(externs,Lists.newArrayList(module),options);
, patch: externsRoot.addChildToBack(jsRoot);
JSModule module=new JSModule("[singleton]");
for(JSSourceFile input : inputs){
module.add(input);
}
initModules(externs,Lists.newArrayList(module),options);


                