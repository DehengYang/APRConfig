
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_10/defects4j_Closure_10/defects4j_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java /tmp/fixed/defects4j_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_10/defects4j_Closure_10/defects4j_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java	2021-09-02 09:32:48.212058477 +0800
+++ /tmp/fixed/defects4j_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java	2021-09-02 09:33:21.805361177 +0800
@@ -1414,7 +1414,7 @@
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }


                
                ====================== dynamoth_2 Closure_10 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1432,7 +1432,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.isAdd()) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                
                ====================== dynamoth_3 Closure_10 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1432,7 +1432,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.isAdd()) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                
                ====================== tbar_1 Closure_10 ================================
                
                [PATCH 1173]//**********************************************************
//com/google/javascript/jscomp/NodeUtil.java ------ 1271
//**********************************************************
===Buggy Code===
return allResultsMatch(n.getFirstChild().getNext(), p)
            && allResultsMatch(n.getLastChild(), p);

===Patch Code===
return (allResultsMatch(n.getFirstChild().getNext(), p)
            && allResultsMatch(n.getLastChild(), p)) || !(!mayHaveSideEffects(n.getFirstChild()));


                
                ====================== tbar_2 Closure_10 ================================
                
                [PATCH 1173]//**********************************************************
//com/google/javascript/jscomp/NodeUtil.java ------ 1271
//**********************************************************
===Buggy Code===
return allResultsMatch(n.getFirstChild().getNext(), p)
            && allResultsMatch(n.getLastChild(), p);

===Patch Code===
return (allResultsMatch(n.getFirstChild().getNext(), p)
            && allResultsMatch(n.getLastChild(), p)) || !(!mayHaveSideEffects(n.getFirstChild()));


                