
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_50/defects4j_Closure_50/defects4j_Closure_50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java /tmp/fixed/defects4j_Closure_50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_50/defects4j_Closure_50/defects4j_Closure_50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java	2021-09-08 03:51:44.068615628 +0800
+++ /tmp/fixed/defects4j_Closure_50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java	2021-09-08 03:52:05.173415682 +0800
@@ -373,7 +373,7 @@
 
     Node right = callTarget.getNext();
     if (right != null) {
-      if (!NodeUtil.isImmutableValue(right)) {
+      if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
         return n;
       }
     }
@@ -386,7 +386,12 @@
       return n;
     }
 
+    if (right != null && right.getType() == Token.STRING
+        && ",".equals(right.getString())) {
       // "," is the default, it doesn't need to be explicit
+      n.removeChild(right);
+      reportCodeChange();
+    }
 
     String joinString = (right == null) ? "," : NodeUtil.getStringValue(right);
     List<Node> arrayFoldedChildren = Lists.newLinkedList();


                
                ====================== dynamoth_2 Closure_50 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1566,7 +1566,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                
                ====================== dynamoth_3 Closure_50 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1566,7 +1566,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                