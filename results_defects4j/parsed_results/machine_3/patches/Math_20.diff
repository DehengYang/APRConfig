
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_20/defects4j_Math_20/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java /tmp/fixed/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_20/defects4j_Math_20/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	2021-09-02 19:09:10.765391699 +0800
+++ /tmp/fixed/defects4j_Math_20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	2021-09-02 19:09:33.639908546 +0800
@@ -918,7 +918,8 @@
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
+            return boundaries != null && isRepairMode ?
+                decode(repair(x)) :
                 decode(x);
         }
 


                
                ====================== dynamoth_2 Math_20 ================================
                
                --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -994,3 +994,5 @@
} else if (x[i] > 1.0) {
-                    repaired[i] = 1.0;
+                    if (false) {
+                        repaired[i] = 1.0;
+                    }
} else {




                
                ====================== dynamoth_3 Math_20 ================================
                
                --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -994,3 +994,5 @@
} else if (x[i] > 1.0) {
-                    repaired[i] = 1.0;
+                    if (false) {
+                        repaired[i] = 1.0;
+                    }
} else {




                
                ====================== simfix_1 Math_20 ================================
                
                [PATCH 84] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_20/defects4j_Math_20/defects4j_Math_20/src/main/java//org/apache/commons/math3/optimization/direct/CMAESOptimizer.java, range: <994,998>, original: if(x[i]>1.0){
repaired[i]=1.0;
}else {
repaired[i]=x[i];
}
, patch: if(x[i]>1.0){
repaired[i]=0.0;
}else {
repaired[i]=x[i];
}


                
                ====================== simfix_2 Math_20 ================================
                
                [PATCH 84] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_20/defects4j_Math_20/defects4j_Math_20/src/main/java//org/apache/commons/math3/optimization/direct/CMAESOptimizer.java, range: <994,998>, original: if(x[i]>1.0){
repaired[i]=1.0;
}else {
repaired[i]=x[i];
}
, patch: if(x[i]>1.0){
repaired[i]=0.0;
}else {
repaired[i]=x[i];
}


                
                ====================== tbar_1 Math_20 ================================
                
                [PATCH 82]//**********************************************************
//org/apache/commons/math3/optimization/direct/CMAESOptimizer.java ------ 995
//**********************************************************
===Buggy Code===
repaired[i] = 1.0;

===Patch Code===
x[i] = 1.0;


                
                ====================== tbar_2 Math_20 ================================
                
                [PATCH 82]//**********************************************************
//org/apache/commons/math3/optimization/direct/CMAESOptimizer.java ------ 995
//**********************************************************
===Buggy Code===
repaired[i] = 1.0;

===Patch Code===
x[i] = 1.0;


                