
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_8/defects4j_Math_8/defects4j_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java /tmp/fixed/defects4j_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_8/defects4j_Math_8/defects4j_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2021-09-03 07:27:16.417034657 +0800
+++ /tmp/fixed/defects4j_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2021-09-03 07:27:40.395726448 +0800
@@ -178,13 +178,13 @@
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final Object[] out = new Object[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();


                
                ====================== simfix_1 Math_8 ================================
                
                [PATCH 75] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_8/defects4j_Math_8/defects4j_Math_8/src/main/java//org/apache/commons/math3/distribution/DiscreteDistribution.java, range: <189,191>, original: for(int i=0;i<sampleSize;i++){
out[i]=sample();
}
, patch: for(int i=sampleSize;i<sampleSize;i++){
out[i]=sample();
}


                
                ====================== simfix_2 Math_8 ================================
                
                [PATCH 75] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Math_8/defects4j_Math_8/defects4j_Math_8/src/main/java//org/apache/commons/math3/distribution/DiscreteDistribution.java, range: <189,191>, original: for(int i=0;i<sampleSize;i++){
out[i]=sample();
}
, patch: for(int i=sampleSize;i<sampleSize;i++){
out[i]=sample();
}


                
                ====================== tbar_1 Math_8 ================================
                
                [PATCH 42]//**********************************************************
//org/apache/commons/math3/distribution/DiscreteDistribution.java ------ 189
//**********************************************************
===Buggy Code===
for (int i = 0; i < sampleSize; i++) {
            out[i] = sample();
        }

===Patch Code===
for (int i = 0; i==sampleSize; i++) {
            out[i] = sample();
        }


                
                ====================== tbar_2 Math_8 ================================
                
                [PATCH 42]//**********************************************************
//org/apache/commons/math3/distribution/DiscreteDistribution.java ------ 189
//**********************************************************
===Buggy Code===
for (int i = 0; i < sampleSize; i++) {
            out[i] = sample();
        }

===Patch Code===
for (int i = 0; i==sampleSize; i++) {
            out[i] = sample();
        }


                