
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Lang_58/defects4j_Lang_58/defects4j_Lang_58/src/java/org/apache/commons/lang/math/NumberUtils.java /tmp/fixed/defects4j_Lang_58/src/java/org/apache/commons/lang/math/NumberUtils.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Lang_58/defects4j_Lang_58/defects4j_Lang_58/src/java/org/apache/commons/lang/math/NumberUtils.java	2021-09-05 16:09:15.204470082 +0800
+++ /tmp/fixed/defects4j_Lang_58/src/java/org/apache/commons/lang/math/NumberUtils.java	2021-09-05 16:09:29.760845999 +0800
@@ -451,8 +451,7 @@
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {


                
                ====================== dynamoth_2 Lang_58 ================================
                
                --- a/src/java/org/apache/commons/lang/math/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java
@@ -463,3 +463,5 @@
}
-                    throw new NumberFormatException(str + " is not a valid number.");
+                    if (org.apache.commons.lang.math.NumberUtils.isDigits((java.lang.String) mant)) {
+                        throw new NumberFormatException(str + " is not a valid number.");
+                    }
case 'f' :




                
                ====================== dynamoth_3 Lang_58 ================================
                
                --- a/src/java/org/apache/commons/lang/math/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java
@@ -463,3 +463,5 @@
}
-                    throw new NumberFormatException(str + " is not a valid number.");
+                    if (org.apache.commons.lang.math.NumberUtils.isDigits((java.lang.String) mant)) {
+                        throw new NumberFormatException(str + " is not a valid number.");
+                    }
case 'f' :




                
                ====================== nopol_2 Lang_58 ================================
                
                --- a/src/java/org/apache/commons/lang/math/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java
@@ -463,3 +463,5 @@
}
-                    throw new NumberFormatException(str + " is not a valid number.");
+                    if ((numeric.length()) != (org.apache.commons.lang.math.NumberUtils.SHORT_ONE)) {
+                        throw new NumberFormatException(str + " is not a valid number.");
+                    }
case 'f' :




                
                ====================== nopol_3 Lang_58 ================================
                
                --- a/src/java/org/apache/commons/lang/math/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java
@@ -463,3 +463,5 @@
}
-                    throw new NumberFormatException(str + " is not a valid number.");
+                    if ((numeric.length()) != (org.apache.commons.lang.math.NumberUtils.SHORT_ONE)) {
+                        throw new NumberFormatException(str + " is not a valid number.");
+                    }
case 'f' :




                
                ====================== tbar_1 Lang_58 ================================
                
                [PATCH 744]//**********************************************************
//org/apache/commons/lang/math/NumberUtils.java ------ 452
//**********************************************************
===Buggy Code===
if (dec == null
                        && exp == null
                        && isDigits(numeric.substring(1))
                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
                        try {
                            return createLong(numeric);
                        } catch (NumberFormatException nfe) {
                            //Too big for a long
                        }
                        return createBigInteger(numeric);

                    }

===Patch Code===
if (dec != numeric || (dec == null
                        && exp == null
                        && isDigits(numeric.substring(1))
                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0))))) {
                        try {
                            return createLong(numeric);
                        } catch (NumberFormatException nfe) {
                            //Too big for a long
                        }
                        return createBigInteger(numeric);

                    }


                
                ====================== tbar_2 Lang_58 ================================
                
                [PATCH 744]//**********************************************************
//org/apache/commons/lang/math/NumberUtils.java ------ 452
//**********************************************************
===Buggy Code===
if (dec == null
                        && exp == null
                        && isDigits(numeric.substring(1))
                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
                        try {
                            return createLong(numeric);
                        } catch (NumberFormatException nfe) {
                            //Too big for a long
                        }
                        return createBigInteger(numeric);

                    }

===Patch Code===
if (dec != numeric || (dec == null
                        && exp == null
                        && isDigits(numeric.substring(1))
                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0))))) {
                        try {
                            return createLong(numeric);
                        } catch (NumberFormatException nfe) {
                            //Too big for a long
                        }
                        return createBigInteger(numeric);

                    }


                