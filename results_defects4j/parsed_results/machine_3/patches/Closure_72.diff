
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_72/defects4j_Closure_72/defects4j_Closure_72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java /tmp/fixed/defects4j_Closure_72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_72/defects4j_Closure_72/defects4j_Closure_72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java	2021-08-31 14:52:00.518664684 +0800
+++ /tmp/fixed/defects4j_Closure_72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java	2021-08-31 14:52:19.175428297 +0800
@@ -149,6 +149,8 @@
                 "inline_",
                 isCallInLoop)));
     // Make label names unique to this instance.
+    new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false)
+        .process(null, fnNode);
   }
 
   static class LabelNameSupplier implements Supplier<String> {
diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_72/defects4j_Closure_72/defects4j_Closure_72/src/com/google/javascript/jscomp/RenameLabels.java /tmp/fixed/defects4j_Closure_72/src/com/google/javascript/jscomp/RenameLabels.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Closure_72/defects4j_Closure_72/defects4j_Closure_72/src/com/google/javascript/jscomp/RenameLabels.java	2021-08-31 14:52:00.518664684 +0800
+++ /tmp/fixed/defects4j_Closure_72/src/com/google/javascript/jscomp/RenameLabels.java	2021-08-31 14:52:19.175428297 +0800
@@ -212,7 +212,7 @@
       String name = nameNode.getString();
       LabelInfo li = getLabelInfo(name);
       // This is a label...
-      if (li.referenced) {
+      if (li.referenced || !removeUnused) {
         String newName = getNameForId(li.id);
         if (!name.equals(newName)) {
           // ... and it is used, give it the short name.


                
                ====================== dynamoth_1 Closure_72 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1381,7 +1381,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                
                ====================== dynamoth_2 Closure_72 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1381,7 +1381,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                
                ====================== dynamoth_3 Closure_72 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1381,7 +1381,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                
                ====================== nopol_1 Closure_72 ================================
                
                --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1381,7 +1381,9 @@
if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (node2.type <= com.google.javascript.rhino.Node.ENUM_PROP) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
}




                