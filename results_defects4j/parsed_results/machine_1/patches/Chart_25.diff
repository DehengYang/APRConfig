
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Chart_25/defects4j_Chart_25/defects4j_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java /tmp/fixed/defects4j_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
--- /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Chart_25/defects4j_Chart_25/defects4j_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2021-08-26 17:44:39.146590526 +0800
+++ /tmp/fixed/defects4j_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2021-08-26 17:44:58.983410018 +0800
@@ -256,6 +256,9 @@
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -312,7 +315,9 @@
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -341,6 +346,7 @@
             line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
                                      lowVal, rectY + rectHeight * 0.75);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
@@ -400,6 +406,9 @@
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -456,7 +465,9 @@
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -484,6 +495,7 @@
             line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
                                      rectX + rectWidth / 2.0d + 5.0d, lowVal);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);


                
                ====================== dynamoth_1 Chart_25 ================================
                
                --- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -206,10 +206,12 @@
PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis,
-                    rangeAxis, statData, row, column);
+        if (false) {
+            if (orientation == PlotOrientation.HORIZONTAL) {
+                drawHorizontalItem(g2, state, dataArea, plot, domainAxis,
+                rangeAxis, statData, row, column);
+            }
+            else if (orientation == PlotOrientation.VERTICAL) {
+                drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis,
+                statData, row, column);
+            }
}
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis,
-                    statData, row, column);
-        }
}




                
                ====================== nopol_1 Chart_25 ================================
                
                --- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -206,10 +206,12 @@
PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis,
-                    rangeAxis, statData, row, column);
+        if (3 == 0) {
+            if (orientation == PlotOrientation.HORIZONTAL) {
+                drawHorizontalItem(g2, state, dataArea, plot, domainAxis,
+                rangeAxis, statData, row, column);
+            }
+            else if (orientation == PlotOrientation.VERTICAL) {
+                drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis,
+                statData, row, column);
+            }
}
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis,
-                    statData, row, column);
-        }
}




                
                ====================== simfix_1 Chart_25 ================================
                
                [PATCH 344] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Chart_25/defects4j_Chart_25/defects4j_Chart_25/source//org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java, range: <110,112>, original: if(masd!=null){
result=masd.getMean();
}
, patch: if(masd==null){
result=masd.getMean();
}


                
                ====================== simfix_2 Chart_25 ================================
                
                [PATCH 344] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Chart_25/defects4j_Chart_25/defects4j_Chart_25/source//org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java, range: <110,112>, original: if(masd!=null){
result=masd.getMean();
}
, patch: if(masd==null){
result=masd.getMean();
}


                
                ====================== simfix_3 Chart_25 ================================
                
                [PATCH 344] file: /mnt/data/bias_validation_2021/execution_framework/../results_defects4j/defects4j_Chart_25/defects4j_Chart_25/defects4j_Chart_25/source//org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java, range: <110,112>, original: if(masd!=null){
result=masd.getMean();
}
, patch: if(masd==null){
result=masd.getMean();
}


                
                ====================== tbar_1 Chart_25 ================================
                
                [PATCH 12]//**********************************************************
//org/jfree/chart/renderer/category/StatisticalBarRenderer.java ------ 200
//**********************************************************
===Buggy Code===
/**
     * Draws the bar with its standard deviation line range for a single 
     * (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param data  the data.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    public void drawItem(Graphics2D g2,
                         CategoryItemRendererState state,
                         Rectangle2D dataArea,
                         CategoryPlot plot,
                         CategoryAxis domainAxis,
                         ValueAxis rangeAxis,
                         CategoryDataset data,
                         int row,
                         int column,
                         int pass) {

        // defensive check
        if (!(data instanceof StatisticalCategoryDataset)) {
            throw new IllegalArgumentException(
                "Requires StatisticalCategoryDataset.");
        }
        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;

        PlotOrientation orientation = plot.getOrientation();
        if (orientation == PlotOrientation.HORIZONTAL) {
            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
                    rangeAxis, statData, row, column);
        }
        else if (orientation == PlotOrientation.VERTICAL) {
            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
                    statData, row, column);
        }
    }

===Patch Code===



                
                ====================== tbar_2 Chart_25 ================================
                
                [PATCH 12]//**********************************************************
//org/jfree/chart/renderer/category/StatisticalBarRenderer.java ------ 200
//**********************************************************
===Buggy Code===
/**
     * Draws the bar with its standard deviation line range for a single 
     * (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param data  the data.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    public void drawItem(Graphics2D g2,
                         CategoryItemRendererState state,
                         Rectangle2D dataArea,
                         CategoryPlot plot,
                         CategoryAxis domainAxis,
                         ValueAxis rangeAxis,
                         CategoryDataset data,
                         int row,
                         int column,
                         int pass) {

        // defensive check
        if (!(data instanceof StatisticalCategoryDataset)) {
            throw new IllegalArgumentException(
                "Requires StatisticalCategoryDataset.");
        }
        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;

        PlotOrientation orientation = plot.getOrientation();
        if (orientation == PlotOrientation.HORIZONTAL) {
            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
                    rangeAxis, statData, row, column);
        }
        else if (orientation == PlotOrientation.VERTICAL) {
            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
                    statData, row, column);
        }
    }

===Patch Code===



                
                ====================== tbar_3 Chart_25 ================================
                
                [PATCH 12]//**********************************************************
//org/jfree/chart/renderer/category/StatisticalBarRenderer.java ------ 200
//**********************************************************
===Buggy Code===
/**
     * Draws the bar with its standard deviation line range for a single 
     * (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param data  the data.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    public void drawItem(Graphics2D g2,
                         CategoryItemRendererState state,
                         Rectangle2D dataArea,
                         CategoryPlot plot,
                         CategoryAxis domainAxis,
                         ValueAxis rangeAxis,
                         CategoryDataset data,
                         int row,
                         int column,
                         int pass) {

        // defensive check
        if (!(data instanceof StatisticalCategoryDataset)) {
            throw new IllegalArgumentException(
                "Requires StatisticalCategoryDataset.");
        }
        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;

        PlotOrientation orientation = plot.getOrientation();
        if (orientation == PlotOrientation.HORIZONTAL) {
            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
                    rangeAxis, statData, row, column);
        }
        else if (orientation == PlotOrientation.VERTICAL) {
            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
                    statData, row, column);
        }
    }

===Patch Code===



                