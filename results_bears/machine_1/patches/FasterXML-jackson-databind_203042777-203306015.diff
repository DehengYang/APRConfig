
                ====================== human-written patch ================================
                
                diff -Naur /mnt/data/bias_validation_2021/results_bears/bears_FasterXML-jackson-databind_203042777-203306015/bears_FasterXML-jackson-databind_203042777-203306015/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java /tmp/fixed/bears_FasterXML-jackson-databind_203042777-203306015/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java
--- /mnt/data/bias_validation_2021/results_bears/bears_FasterXML-jackson-databind_203042777-203306015/bears_FasterXML-jackson-databind_203042777-203306015/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java	2022-04-23 04:33:47.493072567 +0800
+++ /tmp/fixed/bears_FasterXML-jackson-databind_203042777-203306015/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java	2022-04-23 04:34:24.050709047 +0800
@@ -952,7 +952,9 @@
         }
         // [databind#1411]: TreeMap does not like null key... (although note that
         //   check above should prevent this code from being called in that case)
-        if (input.containsKey(null)) {
+        // [databind#153]: but, apparently, some custom Maps do manage hit this
+        //   problem.
+        if (_hasNullKey(input)) {
             TreeMap<Object,Object> result = new TreeMap<Object,Object>();
             for (Map.Entry<?,?> entry : input.entrySet()) {
                 Object key = entry.getKey();
@@ -967,6 +969,22 @@
         return new TreeMap<Object,Object>(input);
     }
 
+    /**
+     * @since 2.8.7
+     */
+    protected boolean _hasNullKey(Map<?,?> input) {
+        // 19-Feb-2017, tatu: As per [databind#1513] there are many cases where `null`
+        //   keys are not allowed, and even attempt to check for presence can cause
+        //   problems. Without resorting to external sorting (and internal API change),
+        //   or custom sortable Map implementation (more code) we can try black- or
+        //   white-listing (that is; either skip known problem cases; or only apply for
+        //   known good cases).
+        //   While my first instinct was to do black-listing (remove Hashtable and ConcurrentHashMap),
+        //   all in all it is probably better to just white list `HashMap` (and its sub-classes).
+        
+        return (input instanceof HashMap) && input.containsKey(null);
+    }
+    
     protected void _writeNullKeyedEntry(JsonGenerator gen, SerializerProvider provider,
             Object suppressableValue, Object value) throws IOException
     {


                
                ====================== tbar_3 FasterXML-jackson-databind_203042777-203306015 ================================
                
                [PATCH 341]//**********************************************************
//com/fasterxml/jackson/databind/JsonMappingException.java ------ 524
//**********************************************************
===Buggy Code===
sb.append(it.next().toString());

===Patch Code===



                