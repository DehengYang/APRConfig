
                ====================== human-written patch ================================
                
                --- /mnt/data/bias_validation_2021/datasets/QuixBugs/java_programs/PASCAL.java	2020-05-12 16:47:29.354529000 +0800
+++ /mnt/data/bias_validation_2021/datasets/QuixBugs/correct_java_programs/PASCAL.java	2020-05-12 16:47:29.474534000 +0800
@@ -1,4 +1,4 @@
-package java_programs;
+package correct_java_programs;
 import java.util.*;
 
 /*
@@ -19,7 +19,7 @@
 
         for (int r=1; r<n; r++) {
             ArrayList<Integer> row = new ArrayList<Integer>();
-            for (int c=0; c<r; c++) {
+            for (int c=0; c<r+1; c++) {
                 int upleft, upright;
                 if (c > 0) {
                     upleft = rows.get(r-1).get(c-1);


                
                ====================== tbar_1 PASCAL_ ================================
                
                [PATCH 8]//**********************************************************
//PASCAL.java ------ 22
//**********************************************************
===Buggy Code===
for (int c=0; c<r; c++) {
                int upleft, upright;
                if (c > 0) {
                    upleft = rows.get(r-1).get(c-1);
                } else {
                    upleft = 0;
                }
                if (c < r) {
                    upright = rows.get(r-1).get(c);
                } else {
                    upright = 0;
                }
                row.add(upleft+upright);
            }

===Patch Code===
for (int c=0; c<=r; c++) {
                int upleft, upright;
                if (c > 0) {
                    upleft = rows.get(r-1).get(c-1);
                } else {
                    upleft = 0;
                }
                if (c < r) {
                    upright = rows.get(r-1).get(c);
                } else {
                    upright = 0;
                }
                row.add(upleft+upright);
            }


                
                ====================== tbar_2 PASCAL_ ================================
                
                [PATCH 8]//**********************************************************
//PASCAL.java ------ 22
//**********************************************************
===Buggy Code===
for (int c=0; c<r; c++) {
                int upleft, upright;
                if (c > 0) {
                    upleft = rows.get(r-1).get(c-1);
                } else {
                    upleft = 0;
                }
                if (c < r) {
                    upright = rows.get(r-1).get(c);
                } else {
                    upright = 0;
                }
                row.add(upleft+upright);
            }

===Patch Code===
for (int c=0; c<=r; c++) {
                int upleft, upright;
                if (c > 0) {
                    upleft = rows.get(r-1).get(c-1);
                } else {
                    upleft = 0;
                }
                if (c < r) {
                    upright = rows.get(r-1).get(c);
                } else {
                    upright = 0;
                }
                row.add(upleft+upright);
            }


                
                ====================== tbar_3 PASCAL_ ================================
                
                [PATCH 8]//**********************************************************
//PASCAL.java ------ 22
//**********************************************************
===Buggy Code===
for (int c=0; c<r; c++) {
                int upleft, upright;
                if (c > 0) {
                    upleft = rows.get(r-1).get(c-1);
                } else {
                    upleft = 0;
                }
                if (c < r) {
                    upright = rows.get(r-1).get(c);
                } else {
                    upright = 0;
                }
                row.add(upleft+upright);
            }

===Patch Code===
for (int c=0; c<=r; c++) {
                int upleft, upright;
                if (c > 0) {
                    upleft = rows.get(r-1).get(c-1);
                } else {
                    upleft = 0;
                }
                if (c < r) {
                    upright = rows.get(r-1).get(c);
                } else {
                    upright = 0;
                }
                row.add(upleft+upright);
            }


                